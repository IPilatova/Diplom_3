{"name": "Проверка увеличения счетчика \"Выполнено за сегодня\" при создании нового заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_order_feed_page.TestCreateOrder object at 0x000001ACC65D7550>, pages = <pages.UIWorkerWeb object at 0x000001ACC688C050>, login_user = <pages.UIWorkerWeb object at 0x000001ACC688C050>\nname_counter = 'Выполнено за сегодня', counter = ('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')\n\n    @pytest.mark.parametrize('name_counter, counter',\n                             [['Выполнено за все время', OrderFeedPageLocators.TOTAL_ORDER_COUNT],\n                              ['Выполнено за сегодня', OrderFeedPageLocators.DAILY_ORDER_COUNT]])\n    def test_orders_counter(self, pages, login_user, name_counter, counter):\n        allure.dynamic.title(f'Проверка увеличения счетчика \"{name_counter}\" при создании нового заказа')\n        pages.click_order_feed_button()\n        prev_counter_value = pages.get_total_order_count(counter)\n        pages.click_constructor_button()\n>       pages.create_order()\n\ntests\\test_order_feed_page.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:79: in create_order\n    order_id = self.get_order_id()\n               ^^^^^^^^^^^^^^^^^^^\npages\\main_page.py:65: in get_order_id\n    self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ba93d4f0-67e5-4f07-ae21-657888292a23\")>, method = <function MainPage.get_order_id.<locals>.<lambda> at 0x000001ACC6876840>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Кликнуть на кнопку \"Лента заказов\"", "status": "passed", "start": 1759682258282, "stop": 1759682258361}, {"name": "Получить количество заказов", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')"}], "start": 1759682258362, "stop": 1759682259386}, {"name": "Кликнуть на кнопку \"Конструктор\"", "status": "passed", "start": 1759682259386, "stop": 1759682259467}, {"name": "Создать заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\pages\\main_page.py\", line 79, in create_order\n    order_id = self.get_order_id()\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\pages\\main_page.py\", line 65, in get_order_id\n    self.wait.until(\n    ~~~~~~~~~~~~~~~^\n        lambda _: self.get_element_text(MainPageLocators.ORDER_ID) != '9999'\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "Добавить ингредиент в заказ", "status": "passed", "start": 1759682259468, "stop": 1759682260017}, {"name": "Кликнуть на кнопку \"Оформить заказ\"", "status": "passed", "start": 1759682260018, "stop": 1759682260084}, {"name": "Получить номер заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\pages\\main_page.py\", line 65, in get_order_id\n    self.wait.until(\n    ~~~~~~~~~~~~~~~^\n        lambda _: self.get_element_text(MainPageLocators.ORDER_ID) != '9999'\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Zdravcity-User\\ya-practicum\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1759682260084, "stop": 1759682270418}], "start": 1759682259468, "stop": 1759682270420}], "parameters": [{"name": "driver", "value": "'firefox'"}, {"name": "name_counter", "value": "'Выполнено за сегодня'"}, {"name": "counter", "value": "('xpath', '//p[text()=\"Выполнено за сегодня:\"]/following-sibling::p')"}], "start": 1759682258282, "stop": 1759682270424, "uuid": "f0214f66-0fff-48a8-82ec-891ce83cc830", "historyId": "fb09d1314fdd334f3ffd8cf368ccb9b6", "testCaseId": "53ca25f16112b04c2bced3d57ad97309", "fullName": "tests.test_order_feed_page.TestCreateOrder#test_orders_counter", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed_page"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "DESKTOP-1UM8KQP"}, {"name": "thread", "value": "6812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed_page"}], "titlePath": ["tests", "test_order_feed_page.py", "TestCreateOrder"]}