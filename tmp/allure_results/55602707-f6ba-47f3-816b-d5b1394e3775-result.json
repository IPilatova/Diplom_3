{"name": "Проверка отображения номера созданного заказа в разделе \"В работе\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "pages = <pages.UIWorkerWeb object at 0x000001ACC6BF1B50>, login_user = <pages.UIWorkerWeb object at 0x000001ACC6BF1B50>\n\n    @pytest.fixture()\n    def created_order(pages, login_user):\n        \"\"\"\n        Создаёт заказ через UI и возвращает его ID.\n        Использует фикстуру авторизации пользователя\n        \"\"\"\n>       order_id = pages.create_order()\n                   ^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:79: in create_order\n    order_id = self.get_order_id()\n               ^^^^^^^^^^^^^^^^^^^\npages\\main_page.py:65: in get_order_id\n    self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b390a807-ac94-44a3-a13f-94b61e0c2387\")>, method = <function MainPage.get_order_id.<locals>.<lambda> at 0x000001ACC688F380>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1759682286384, "stop": 1759682286384, "uuid": "b5d4c88b-70d5-42d3-9824-86e7b1f69cb9", "historyId": "ecf2d8ca0a2b5efe2ad2c3d5882d6ec2", "testCaseId": "4084b39809ea901cc598c6fcc63769e2", "fullName": "tests.test_order_feed_page.TestCreateOrder#test_new_order_display_in_progress", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed_page"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "DESKTOP-1UM8KQP"}, {"name": "thread", "value": "6812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed_page"}], "titlePath": ["tests", "test_order_feed_page.py", "TestCreateOrder"]}